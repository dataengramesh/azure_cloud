1. What does it mean to have multiple tenants?
Multi-tenancy means that a single instance of the software and its supporting infrastructure serves multiple customers. 
Each customer shares the software application and also shares a single database. 
Each tenant’s data is isolated and remains invisible to other tenants.

Affordable Cost: Multiple customers means that the cost for the environment is shared, and those savings (from the SaaS vendor) 
are typically transferred to the cost of the software.
Integrations: Cloud environments allow for easier integration with other applications through the use of APIs.
“Hands-free” Maintenance: The server technically belongs to the SaaS vendor,
 meaning that a certain level of database maintenance is handled by the vendor, 
instead of you maintaining the environment yourself.

Ongoing maintenance and updates: Customers don’t need to pay costly maintenance fees to keep their software up to date.
 Vendors roll out new features and updates. These are often included with a SaaS subscription.

Potential drawbacks of multi-tenant:

Limited Management/Customization: While you do have added integration benefits, 
custom changes to the database aren’t typically an option.

Updates/Changes: If you’re reliant on integrations with other SaaS products and one updates their system, it may cause issues with those connecting apps

2. What is the procedure for gaining access to the Azure portal?
 i. need active subscription to Azure portal
 ii. User Access Administrator role assignment at root scope (/), to get global administrator -> yes ->Under Access management for Azure resources, set the toggle to Yes.
 iii. search for Management groups, Subscriptions, Resource groups, or a specific resource. -> Access control (IAM) page for a resource group.-> Add > Add role assignment.
 ->Roles tab, select a role that you want to use. -> On the Members tab, select User, group, or
 service principal to assign the selected role to one or more Azure AD users, groups, or service principals (applications).
 
 3. What is a nonrelational Azure Database powered by PaaS?
 
 Azure Cosmos DB is one of the best choices in case you are developing a serverless application.
  Azure Cosmos DB provides you with the support of different APIs that help you access your data easily and
  those APIs are SQL API, API for MongoDB, Table API, and Gremlin API, et
  you will get a flexible pricing model and along with that, you will also get 99.99% guarantees for availability, consistency, throughput, etc
 Azure Cosmos DB is good for web, IoT, mobile, and gaming applications where you need a very less response time and can serve more requests.

When to use 
If you want to build a high-performance application.
When you have the requirement to use a no SQL database.	
When your application needs a fast, stable, and large database.
If your requirement is to use a globally distributed and multi-model database.	
When you have a bit more budget as the cosmos DB is a bit expensive as compared to SQL server. It is a high speed compared to SQL server.
Low Latency.	
Auto indexing
It is auto-scalable.

Best For Mobile and Web Applications
Good For Gaming application
Good choice for E-commerce/Retail application


5. What does the Azure Firewall rule entail?
Azure Firewall is a managed, cloud-based network security service that protects your Azure Virtual Network resources.
 It's a fully stateful firewall-as-a-service with built-in high availability and unrestricted cloud scalability.
 You can centrally create, enforce, and log application and network connectivity policies across subscriptions and virtual networks.

The Web Application Firewall (WAF) is a feature of Application Gateway that provides centralized 
inbound protection of your web applications from common exploits and vulnerabilities. 
Azure Firewall provides inbound protection for non-HTTP/S protocols (for example, RDP, SSH, FTP),
 outbound network-level protection for all ports and protocols, and application-level protection for outbound HTTP/S.
 
 How does Azure Firewall handle planned maintenance and unplanned failures?
Azure Firewall consists of several backend nodes in an active-active configuration. For any planned maintenance,
 we have connection draining logic to gracefully update nodes. Updates are planned during non-business hours for
 each of the Azure regions to further limit risk of disruption. For unplanned issues, we instantiate a new node to replace the failed node.
 Connectivity to the new node is typically reestablished within 10 seconds from the time of the failure.
 
 You can configure NAT rules, network rules, and applications rules on Azure Firewall using either classic rules or Firewall Policy.
 Azure Firewall denies all traffic by default, until rules are manually configured to allow traffic.
 
 3-way handshake behavior
As a stateful service, Azure Firewall completes a TCP 3-way handshake for allowed traffic, from a source to the destination. For example, VNet-A to VNet-B.

Creating an allow rule from VNet-A to VNet-B does not mean that new initiated connections from VNet-B to VNet-A are allowed.

As a result, there is no need to create an explicit deny rule from VNet-B to VNet-A. If you create this deny rule,
 you'll interrupt the 3-way handshake from the initial allow rule from VNet-A to VNet-B.
 
 What's the deal with NSG traffic?
 You can use an Azure network security group to filter network traffic to and from Azure resources in an Azure virtual network.
 A network security group contains security rules that allow or deny inbound network traffic to, or outbound network traffic from,
 several types of Azure resources. 
 For each rule, you can specify source and destination, port, and protocol.